
Scripts 
Contain a series of commands 
An interpreter executes commands in the script 
Great for automating tasks 

Create a file enter the following
  #!/bin/bash 
  echo “Scripting is fun!”
  Change file permission to make it executable: chmod 755 file
Variables
  You can add variable and assign a value to the variable 
  Case sensitive 
    VARIABLE_NAME=’Value”
    Cannot include - or @ symbols. It cannot start with a number either 
    Value in string must be surrounded by curly bracket {}


File Operators (tests)
-d FILE - true if file is a directory
-e FILE - True if file exists 
-f FILETrue if the file exists and is a regular file 
-r FILE True if the file is readable by you
-s FILE True if the file exists and is not empty 
-w FILE True if the file is writeable by you
-x FILE True if the file is executable by you

String Operators 
  -z STRING - true if string is empty 
  -n STRING - true if the string is not empty 
 string1=string2 
  True if the strings are equal
string1!=string2
  True if the strings are not equal 


Arithmetic operator
  arg1 –eq arg2 True if arg1 is equal to arg2.
  arg1 –ne arg2 True if arg1 is not equal to arg2.

  arg1 –lt arg2 True if arg1 is less than arg2.
  arg1 –le arg2 True if arg1 is less than or equal to arg2.
  
  arg1 –gt arg2 True if arg1 is greater than arg2.
  arg1 –ge arg2 True if arg1 is greater than or equal to arg2.

Making Decisions- The if Statement 
  if [ condition-is-true ]
  then
    command 1
    command 2
    command N
  fi
Ex
#!/bin/bash
MY_SHELL="bash"


if [ "$MY_SHELL" = "bash" ]
then
  echo "You seem to like the bash shell."
Fi

IF/else
  if [ condition-is-true ]
  then
    command N
  else
    command N
  fi

#!/bin/bash
MY_SHELL="csh"
if [ "$MY_SHELL" = "bash" ]
then
  echo "You seem to like the bash shell."
else
  echo "You don't seem to like the bash shell."
fi


if/elif/else
if [ condition-is-true ]
Then
  command N
elif [ condition-is-true ]
then
  command N
else
  command N
fi

if [ "$MY_SHELL" = "bash" ]
then
  echo "You seem to like the bash shell."
elif [ "$MY_SHELL" = "csh" ]
then
  echo "You seem to like the csh shell."
else
  echo "You don't seem to like the bash or csh shells."
fi


For loop 
for VARIABLE_NAME in ITEM_1 ITEM_N
do
  command 1
  command 2
  command N
done

#!/bin/bash
for COLOR in red green blue
do
  echo "COLOR: $COLOR"
done


